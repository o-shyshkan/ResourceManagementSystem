---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper-enefit-test
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker-enefit-test
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - app-network
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=sa
      - POSTGRES_DB=postgres

    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - app-network

  pgadmin-compose:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=test@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=test123!
      - PGADMIN_CONFIG_WTF_CSRF_ENABLED=False
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - app-network
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "8081:8080"
    depends_on:
      - broker
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=sa
      - SERVER_PORT=8080
      - RESOURCE_SERVICE_URL=http://resource-service:8080
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:29092
    networks:
      - app-network
  resource-service:
      build:
        context: .
        dockerfile: resource-service/Dockerfile
      container_name: resource-service
      ports:
        - "8082:8080"
      depends_on:
        - postgres
        - broker
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
        - SPRING_DATASOURCE_USERNAME=sa
        - SPRING_DATASOURCE_PASSWORD=sa
        - SERVER_PORT=8080
        - NOTIFICATION_SERVICE_URL=http://notification-service:8080
        - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:29092
      networks:
        - app-network
volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
